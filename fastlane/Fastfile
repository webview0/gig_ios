# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.81.0"

default_platform :ios

#
# Common Lanes:
#   fastlane certs  # first time only
#   fastlane ios test
#   fastlane ios beta
#   fastlane ios appstore
#

desc "Match development and production certificates and profiles"
desc "Do this the first time you set up your project"
lane :certs do
  match(type: "development", app_identifier: "com.accrisoft.TBAM.alpha")
  match(type: "appstore",    app_identifier: "com.accrisoft.TBAM")
  puts "---------------------------------------------------------------------"
  puts "--- Consider running 'fastlane xcode' to remove the Fix-it button ---"
  puts "--- if you are running fastlane tools only                        ---"
  puts "---------------------------------------------------------------------"
end


desc "Remove the Fix-it button from Xcode"
lane :xcode do
  install_xcode_plugin(url: "https://github.com/fastlane/FixCode/releases/download/0.4.0/FixCode.xcplugin.zip")
end


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "TBAM") # Run Tests
  end

  desc "Take screenshots"
  lane :screenshots do
    snapshot(scheme: "TBAM")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    match(type: "appstore") # more information: https://codesigning.guide
    # scan(scheme: "TBAM") # Run Tests
    gym(scheme: "TBAM",    # Build your app
        xcargs: "OTHER_SWIFT_FLAGS=\"\\$(inherited) -D TBAM_RELEASE -D BHAPPANALYZER_ANSWERS\""
    )
    # pilot upload --ipa fastlane/build/TBAM.ipa  # upload to TestFlight

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    match(type: "appstore")
    # scan(scheme: "TBAM") # Run Tests
    # snapshot
    gym(scheme: "TBAM",    # Build your app
        xcargs: "OTHER_SWIFT_FLAGS=\"\\$(inherited) -D TBAM_RELEASE -D BHAPPANALYZER_ANSWERS\""
    )
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
